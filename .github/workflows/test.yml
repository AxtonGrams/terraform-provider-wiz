name: Tests
on:
  pull_request:
    paths-ignore:
      - 'README.md'
jobs:
  # ensure the code builds...
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version-file: 'go.mod'
        cache: true
      id: go
    - name: Get dependencies
      run: go mod download
    - name: Build
      run: go build -v .
  lint:
    name: go-lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v4
      with:
        go-version-file: 'go.mod'
    - uses: danhunsaker/golang-github-actions@v1.3.1
      with:
        run: lint
  fmt:
    name: go-fmt
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v4
      with:
        go-version-file: 'go.mod'
    - uses: danhunsaker/golang-github-actions@v1.3.1
      with:
        run: fmt
  imports:
    name: go-imports
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v4
      with:
        go-version-file: 'go.mod'
    - name: check
      uses: danhunsaker/golang-github-actions@v1.3.1
      with:
        run: imports
        token: ${{ secrets.GITHUB_TOKEN }}
  generate:
    name: go-generate
    runs-on: ubuntu-latest
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version-file: 'go.mod'
        cache: true
    - run: go generate ./...
    - name: git diff
      run: |
        git diff --exit-code || \
          (echo; echo "Unexpected difference in directories after code generation. Run 'go generate ./...' command and commit."; exit 1)
  test:
    name: Matrix Test
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform:
          - '1.0.*'
          - '1.1.*'
          - '1.2.*'
          - '1.3.*'
          - '1.4.*'
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version-file: 'go.mod'
        cache: true
      id: go
    - uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ matrix.terraform }}
        terraform_wrapper: false
    - run: terraform fmt -check
    - name: Get dependencies
      run: go mod download
    - run: go test -v -cover ./internal/provider/
      timeout-minutes: 10
      env:
        TF_VAR_WIZ_URL: ${{ secrets.WIZ_URL }}
        TF_VAR_WIZ_AUTH_CLIENT_ID: ${{ secrets.WIZ_AUTH_CLIENT_ID }}
        TF_VAR_WIZ_AUTH_CLIENT_SECRET: ${{ secrets.WIZ_AUTH_CLIENT_SECRET }}
        TF_VAR_PROXY: ${{ secrets.PROXY }}
        TF_VAR_PROXY_SERVER: ${{ secrets.PROXY_SERVER }}
        TF_VAR_CA_CHAIN: ${{ secrets.CA_CHAIN }}
        WIZ_URL: ${{ secrets.WIZ_URL }}
        WIZ_AUTH_CLIENT_ID: ${{ secrets.WIZ_AUTH_CLIENT_ID }}
        WIZ_AUTH_CLIENT_SECRET: ${{ secrets.WIZ_AUTH_CLIENT_SECRET }}
        PROXY: ${{ secrets.PROXY }}
        PROXY_SERVER: ${{ secrets.PROXY_SERVER }}
        CA_CHAIN: ${{ secrets.CA_CHAIN }}
        CGO_ENABLED: 0
